#!/bin/sh

set -e

# Source debconf library
. /usr/share/debconf/confmodule

#db_version 2.0
db_capb backup

# possible states
REQUIREMENTS=1
IDENTITY_DIR=2

STATE=$REQUIREMENTS

error_ask_continue () {
      db_input high $1
      db_go
      db_get $1
      if [ "$RET" = "true" ]; then
            STATE=$(($STATE + 1))
      fi
}

while [ "$STATE" != 0 -a "$STATE" != 3 ]; do
case "$STATE" in
      # requirements infos
      "$REQUIREMENTS")
            db_input high storagenode/requirements || true
            db_go;
            STATE=$IDENTITY_DIR
      ;;
      "$IDENTITY_DIR")
            # identity directory
            db_input high storagenode/identitydir || true
            if db_go; then
                  # check that the directory exists
                  db_get storagenode/identitydir
                  provided_dir="$RET"
                  if [ ! -d $provided_dir ] ; then
                  error_ask_continue storagenode/identitydir/directory_does_not_exist_continue
                  elif [ ! -f "$provided_dir/ca.cert" ]; then
                        error_ask_continue storagenode/identitydir/no_ca_cert_continue
                  elif [ ! -f "$provided_dir/identity.cert" ]; then
                        error_ask_continue storagenode/identitydir/no_identity_cert_continue
                  elif [ ! -f "$provided_dir/identity.key" ]; then
                        error_ask_continue storagenode/identitydir/no_identity_key_continue
                  else
                        STATE=$(($STATE + 1))
                  fi
            else
                  # the user has chosen to go back
                  STATE=$(($STATE - 1))
            fi
      ;;
      esac
done
# wallet address
#db_input high storagenode/wallet || true
#db_go

# email
#db_input high storagenode/email || true
#db_go

# external address
#db_input high storagenode/external_addr || true
#db_go

# storage directory
#while [ "$storagedir" = "" ]; do
      # Get storage dir
#      db_input high storagenode/storagedir || true
#      db_go
#      storagedir="$RET"
#done

# allocated disk space
#db_input high storagenode/diskspace || true
#db_go

# advertised bandwidth
#db_input high storagenode/bandwidth || true
#db_go


